# Taken from: https://github.com/BurntSushi/ripgrep/blob/d2a409f89f1eb8e3ad3990aeb1fff944289534f2/.github/workflows/release.yml
# but with the actual rust binary stuff replaces with just the xlsx generation.
#
# The way this works is the following:
#
# The create-release job runs purely to initialize the GitHub release itself
# and to output upload_url for the following job.
#
# The build-release job runs only once create-release is finished. It gets the
# release upload URL from create-release job outputs, then builds the release
# executables for each supported platform and attaches them as release assets
# to the previously created release.
#
# The key here is that we create the release only once.
#
# Reference:
# https://eugene-babichenko.github.io/blog/2020/05/09/github-actions-cross-platform-auto-releases/

name: release
on:
  push:
    # Enable when testing release infrastructure on a branch.
    branches:
      - fix-release-2
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"

permissions:
  contents: write

jobs:
  create-release:
    name: create-release
    runs-on: ubuntu-latest
    # env:
    # Set to force version number, e.g., when no tag exists.
    # VERSION: TEST-0.0.0
    steps:
      - uses: actions/checkout@v3
      - name: Get the release version from the tag
        id: version
        shell: bash
        run: |
          echo "version=$GITHUB_REF_NAME" >> $GITHUB_OUTPUT
          echo "version is: ${{ steps.version.outputs.version }}"
      - name: Create GitHub release
        env:
          GH_TOKEN: ${{ github.token }}
        run: gh release create ${{ steps.version.outputs.version }}

  build-release-xlsx:
    name: build-release-xlsx
    runs-on: ubuntu-latest
    needs: ["create-release"]
    env:
      # For some builds, we use cross to test on 32-bit and big-endian
      # systems.
      CARGO: cargo
      # When CARGO is set to CROSS, this is set to `--target matrix.target`.
      TARGET_FLAGS: ""
      # When CARGO is set to CROSS, TARGET_DIR includes matrix.target.
      TARGET_DIR: ./target
      # Emit backtraces on panics.
      RUST_BACKTRACE: 1
      # Build static releases with PCRE2.
      PCRE2_SYS_STATIC: 1

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Build release spreadsheet
        run: cargo run --release

      - name: Upload release archive
        env:
          GH_TOKEN: ${{ github.token }}
        run: gh release upload ${{ needs.create-release.outputs.version }} XWingTMG2_Inventory.xlsx
